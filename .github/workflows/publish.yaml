name: "Publish site"
on:
  # Run only when pushing to master branch
  push:
    branches:
    - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v13
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/i6laym9jw3wg9mw6ncyrk6gjx4l34vvx/install
          install_options: "--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve"
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Build as docker img
        id: build
        run: |
          nix-build -j auto docker.nix --argstr tag latest -o docker-img
          # docker
          export DOCKERIMG=$(readlink ./docker-img)
          echo "::set-output name=docker-img::${DOCKERIMG}"
      - name: Upload docker image tgz
        uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/master'
        with:
          name: docker-img
          retention-days: 1
          path: |
            ${{ steps.build.outputs.docker-img }}

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    env:
      DOCKERTAG: latest
    steps:
      - name: Download docker img
        uses: actions/download-artifact@v2
        with:
          name: docker-img
      - name: Build & Publish Docker image to Docker Hub
        run: |
          docker load -i *docker-image-banyon.tar.gz
          echo ${{ secrets.DOCKER_PASS }} | docker login -u sridca --password-stdin
          set -x
          docker push sridca/banyon:latest

  website:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Download docker image
        uses: actions/download-artifact@v2
        with:
          name: docker-img
      - name: Generate website HTML ðŸ”§
        run: |
          mkdir -p ./content/.ci/output
          ls -l
          docker load -i *docker-image-banyan.tar.gz
          docker run -e LANG=C.UTF-8 -e LC_ALL=C.UTF-8 -v $PWD/content:/data/content sridca/banyan banyan gen /data/content/.ci/output
          cp -r ./content/.ci .
          # bash ./.ci/output/_emanote-bin/compile-css
      - name: Deploy to website to gh-pages ðŸš€
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .ci/output
          # cname: note.ema.srid.ca